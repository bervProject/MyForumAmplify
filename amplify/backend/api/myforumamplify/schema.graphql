type Post @model @auth(rules: [{allow: public, operations: [read]}, {allow: owner}]) {
  id: ID!
  title: String!
  content: String!
  draft: Boolean!
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  likes: [PostLike] @hasMany(fields: ["id"])
  selectedComment: Comment @hasOne(fields: ["id"])
  owner: String @auth(rules: [{allow: public, operations: [read]}, {allow: owner}])
}

type PostLike @model @auth(rules: [{allow: public, operations: [read]}, {allow: owner}]) {
  id: ID!
  postID: ID!
  post: Post @belongsTo(fields: ["postID"])
  owner: String @auth(rules: [{allow: public, operations: [read]}, {allow: owner}])])
}

type Comment @model @auth(rules: [{allow: public, operations: [read]}, {allow: owner}]) {
  id: ID!
  postID: ID! @index(name: "byPost", sortKeyFields: ["content"])
  post: Post @belongsTo(fields: ["postID"])
  content: String!
  likes: [CommentLike] @hasMany(fields: ["id"])
  owner: String @auth(rules: [{allow: public, operations: [read]}, {allow: owner}])])
}

type CommentLike @model @auth(rules: [{allow: public, operations: [read]}, {allow: owner}]) {
  id: ID!
  commentID: ID!
  comment: Comment @belongsTo(fields: ["commentID"])
  owner: String @auth(rules: [{allow: public, operations: [read]}, {allow: owner}])])
} 